function Printer_3D_9;
interface of Printer_3D_9 {
	in bool MAX_TEMP_HOTEND;
	in bool MAX_TEMP_HEATBREAK;
	in bool MAX_TEMP_HEATBED;
	in bool MAX_TEMP_AMBIENT;
	in bool MAX_CURRENT_HOTEND;
	in bool MAX_CURRENT_HEATBED;

	in bool STALL_AXIS_X;
	in bool STALL_AXIS_Y;
	in bool STALL_AXIS_Z;
	in bool STALL_AXIS_E;
	
	in bool RESET;

	out bool EN_HEAT_HOTEND;
	out bool EN_HEAT_HEATBED;

	out bool EN_MOTOR_X;
	out bool EN_MOTOR_Y;
	out bool EN_MOTOR_Z;
	out bool EN_MOTOR_E;
}

policy PROTECT_THERMAL_HOTEND of Printer_3D_9 {
	states {

		l0 {
			-> l0 on (RESET);
			-> l1 on (!RESET);
		}

		l1 {
			-> l0 on (RESET);
			-> l1 on (EN_HEAT_HOTEND and !MAX_TEMP_HOTEND) or (!EN_HEAT_HOTEND and !MAX_TEMP_HOTEND) or (!EN_HEAT_HOTEND and MAX_TEMP_HOTEND);
			-> violation on (EN_HEAT_HOTEND and MAX_TEMP_HOTEND) recover EN_HEAT_HOTEND := 0;	
		}
	}
}

policy PROTECT_THERMAL_HEATBED of Printer_3D_9 {
	states {

		l0 {
			-> l0 on (RESET);
			-> l1 on (!RESET);
		}

		l1 {
			-> l0 on (RESET);
			-> l1 on (EN_HEAT_HEATBED and !MAX_TEMP_HEATBED) or (!EN_HEAT_HEATBED and !MAX_TEMP_HEATBED) or (!EN_HEAT_HEATBED and MAX_TEMP_HEATBED);
			-> violation on (EN_HEAT_HEATBED and MAX_TEMP_HEATBED) recover EN_HEAT_HEATBED := 0;	
		}
	}
}

policy PROTECT_THERMAL_HEATBREAK of Printer_3D_9 {
	states {

		l0 {
			-> l0 on (RESET);
			-> l1 on (!RESET);
		}

		l1 {
			-> l0 on (RESET);
			-> l1 on (EN_HEAT_HOTEND and !MAX_TEMP_HEATBREAK) or (!EN_HEAT_HOTEND and !MAX_TEMP_HEATBREAK) or (!EN_HEAT_HOTEND and MAX_TEMP_HEATBREAK);
			-> violation on (EN_HEAT_HOTEND and MAX_TEMP_HEATBREAK) recover EN_HEAT_HOTEND := 0;	
		}
	}
}

policy PROTECT_THERMAL_AMBIENT of Printer_3D_9 {
	states {

		l0 {
			-> l0 on (RESET);
			-> l1 on (!RESET);
		}

		l1 {
			-> l0 on (RESET);
			-> l1 on ((EN_HEAT_HEATBED and EN_HEAT_HOTEND and !MAX_TEMP_AMBIENT) or (EN_HEAT_HEATBED and !EN_HEAT_HOTEND and !MAX_TEMP_AMBIENT) or (EN_HEAT_HEATBED and !EN_HEAT_HOTEND and MAX_TEMP_AMBIENT) or (!EN_HEAT_HEATBED and EN_HEAT_HOTEND and !MAX_TEMP_AMBIENT) or (!EN_HEAT_HEATBED and !EN_HEAT_HOTEND and !MAX_TEMP_AMBIENT) or (!EN_HEAT_HEATBED and !EN_HEAT_HOTEND and MAX_TEMP_AMBIENT));
			-> violation on ((EN_HEAT_HEATBED and EN_HEAT_HOTEND) and MAX_TEMP_AMBIENT) or ((!EN_HEAT_HEATBED and EN_HEAT_HOTEND) and MAX_TEMP_AMBIENT) or ((EN_HEAT_HEATBED and !EN_HEAT_HOTEND) and MAX_TEMP_AMBIENT);	
			//-> violation on ((!EN_HEAT_HEATBED and EN_HEAT_HOTEND) and MAX_TEMP_AMBIENT);	
			//-> violation on ((EN_HEAT_HEATBED and !EN_HEAT_HOTEND) and MAX_TEMP_AMBIENT);	
		}
	}
}

policy PROTECT_CURRENT_HOTEND of Printer_3D_9 {
	states {

		l0 {
			-> l0 on (RESET);
			-> l1 on (!RESET);
		}

		l1 {
			-> l0 on (RESET);
			-> l1 on (EN_HEAT_HOTEND and !MAX_CURRENT_HOTEND);
			-> l1 on (!EN_HEAT_HOTEND and !MAX_CURRENT_HOTEND);
			-> l1 on (!EN_HEAT_HOTEND and MAX_CURRENT_HOTEND);
			-> violation on (EN_HEAT_HOTEND and MAX_CURRENT_HOTEND);	
		}
	}
}

policy PROTECT_CURRENT_HEATBED of Printer_3D_9 {
	states {

		l0 {
			-> l0 on (RESET);
			-> l1 on (!RESET);
		}

		l1 {
			-> l0 on (RESET);
			-> l1 on (EN_HEAT_HEATBED and !MAX_CURRENT_HEATBED);
			-> l1 on (!EN_HEAT_HEATBED and !MAX_CURRENT_HEATBED);
			-> l1 on (!EN_HEAT_HEATBED and MAX_CURRENT_HEATBED);
			-> violation on (EN_HEAT_HEATBED and MAX_CURRENT_HEATBED);	
		}
	}
}

policy PROTECT_STEPPER_X of Printer_3D_9 {
	internals {
		dtimer_t V_X;
	}
	
	states {

		l0 {
			-> l0 on (RESET): V_X := 0;
			-> l1 on (!RESET): V_X := 0;
		}

		l1 {
			-> l0 on (RESET): V_X := 0;
			-> l1 on (EN_MOTOR_X and !STALL_AXIS_X);
			-> l1 on (!EN_MOTOR_X and STALL_AXIS_X);
			-> l1 on (!EN_MOTOR_X and !STALL_AXIS_X);
			-> l2 on (EN_MOTOR_X and STALL_AXIS_X): V_X := 0;
		}

		l2 {
			-> l0 on (RESET): V_X := 0;
			-> l1 on (EN_MOTOR_X and !STALL_AXIS_X);
			-> l1 on (!EN_MOTOR_X and STALL_AXIS_X);
			-> l1 on (!EN_MOTOR_X and !STALL_AXIS_X);
			-> l2 on (EN_MOTOR_X and STALL_AXIS_X and V_X < 5);
			-> violation on (EN_MOTOR_X and STALL_AXIS_X and V_X >= 5);
		}
	}
}

policy PROTECT_STEPPER_Y of Printer_3D_9 {
	internals {
		dtimer_t V_Y;
	}
	
	states {

		l0 {
			-> l0 on (RESET): V_Y := 0;
			-> l1 on (!RESET): V_Y := 0;
		}

		l1 {
			-> l0 on (RESET): V_Y := 0;
			-> l1 on (EN_MOTOR_Y and !STALL_AXIS_Y);
			-> l1 on (!EN_MOTOR_Y and STALL_AXIS_Y);
			-> l1 on (!EN_MOTOR_Y and !STALL_AXIS_Y);
			-> l2 on (EN_MOTOR_Y and STALL_AXIS_Y): V_Y := 0;
		}

		l2 {
			-> l0 on (RESET): V_Y := 0;
			-> l1 on (EN_MOTOR_Y and !STALL_AXIS_Y);
			-> l1 on (!EN_MOTOR_Y and STALL_AXIS_Y);
			-> l1 on (!EN_MOTOR_Y and !STALL_AXIS_Y);
			-> l2 on (EN_MOTOR_Y and STALL_AXIS_Y and V_Y < 5);
			-> violation on (EN_MOTOR_Y and STALL_AXIS_Y and V_Y >= 5);
		}
	}
}

policy PROTECT_STEPPER_Z of Printer_3D_9 {
	internals {
		dtimer_t V_Z;
	}
	
	states {

		l0 {
			-> l0 on (RESET): V_Z := 0;
			-> l1 on (!RESET): V_Z := 0;
		}

		l1 {
			-> l0 on (RESET): V_Z := 0;
			-> l1 on (EN_MOTOR_Z and !STALL_AXIS_Z);
			-> l1 on (!EN_MOTOR_Z and STALL_AXIS_Z);
			-> l1 on (!EN_MOTOR_Z and !STALL_AXIS_Z);
			-> l2 on (EN_MOTOR_Z and STALL_AXIS_Z): V_Z := 0;
		}

		l2 {
			-> l0 on (RESET): V_Z := 0;
			-> l1 on (EN_MOTOR_Z and !STALL_AXIS_Z);
			-> l1 on (!EN_MOTOR_Z and STALL_AXIS_Z);
			-> l1 on (!EN_MOTOR_Z and !STALL_AXIS_Z);
			-> l2 on (EN_MOTOR_Z and STALL_AXIS_Z and V_Z < 5);
			-> violation on (EN_MOTOR_Z and STALL_AXIS_Z and V_Z >= 5);
		}
	}
}